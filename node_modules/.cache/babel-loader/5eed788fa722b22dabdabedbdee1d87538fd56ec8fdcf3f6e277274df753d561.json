{"ast":null,"code":"var _jsxFileName = \"/home/senume/Project/FullStack/wsrp/src/components/Record_button/Record_button.jsx\";\n// import React, {useState} from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport \"./Record_button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecordButton() {\n  function Recording() {\n    // Finding a device and getting permission from user.\n    try {\n      let stream = navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      });\n      console.log(stream);\n      console.log(\"Creating Media Recording API Object\");\n      stream.then(MS => {\n        console.log(MS);\n        let MediaRec = new MediaRecorder(MS);\n        const chunks = [];\n        MediaRec.ondataavailable = e => {\n          chunks.push(e.data);\n        };\n        MediaRec.onstop = e => {\n          const blob = new Blob(chunks, {\n            type: \"audio/mp3\"\n          });\n          const FileContent = new File([blob], 'Recorded_samples.mp3', {\n            type: \"audio/mp3\"\n          });\n          const AudioForm = new FormData();\n          AudioForm.append('Audio', FileContent);\n          axios.post('http://localhost:3500/upload', AudioForm, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(response => {\n            // Handle success\n            console.log('Response:', response.data);\n          }).catch(error => {\n            // Handle error\n            console.error('Error:', error);\n          });\n        };\n        console.log(\"Starting Recording\");\n        MediaRec.start();\n        setTimeout(() => {\n          MediaRec.stop();\n          MS.getTracks().forEach(track => track.stop());\n          console.log(\"Stopped Recording\");\n        }, 10000);\n\n        // console.log(MediaRec.ondataavailable);\n      });\n    } catch (error) {\n      console.log(\"Error encounter while accessing a microphone device \" + error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"outer_circle\",\n    onClick: Recording,\n    children: /*#__PURE__*/_jsxDEV(FaMicrophone, {\n      id: \"symbol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this)\n\n  // <div className=\"outer_circle\">\n  //     <FaMicrophone id=\"symbol\" />\n  // </div>\n  ;\n}\n_c = RecordButton;\nexport default RecordButton;\nvar _c;\n$RefreshReg$(_c, \"RecordButton\");","map":{"version":3,"names":["FaMicrophone","axios","jsxDEV","_jsxDEV","RecordButton","Recording","stream","navigator","mediaDevices","getUserMedia","audio","video","console","log","then","MS","MediaRec","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","FileContent","File","AudioForm","FormData","append","post","headers","response","catch","error","start","setTimeout","stop","getTracks","forEach","track","className","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/senume/Project/FullStack/wsrp/src/components/Record_button/Record_button.jsx"],"sourcesContent":["// import React, {useState} from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport axios from \"axios\";\n\nimport \"./Record_button.css\";\n\n\nfunction RecordButton() {\n\n    function Recording() {\n\n        // Finding a device and getting permission from user.\n        try {\n\n        let stream = navigator.mediaDevices.getUserMedia({audio: true, video: false});\n        console.log(stream);\n        console.log(\"Creating Media Recording API Object\");\n\n        stream.then( MS => {\n            console.log(MS);\n\n            let MediaRec = new MediaRecorder(MS);\n            \n            const chunks = [];\n\n            MediaRec.ondataavailable = (e) => {\n                chunks.push(e.data);\n              };\n\n            MediaRec.onstop = (e) => {\n                const blob = new Blob(chunks, {\n                  type: \"audio/mp3\"\n                });\n                \n                const FileContent = new File([blob], 'Recorded_samples.mp3', {\n                    type: \"audio/mp3\",\n                });\n\n                const AudioForm = new FormData();\n                AudioForm.append('Audio', FileContent);\n\n                axios.post('http://localhost:3500/upload', AudioForm, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                })\n                .then((response) => {\n                    // Handle success\n                    console.log('Response:', response.data);\n                })\n                .catch((error) => {\n                    // Handle error\n                    console.error('Error:', error);\n                });\n\n\n\n                \n\n            };\n\n            console.log(\"Starting Recording\");\n            MediaRec.start();\n            \n            setTimeout( () => {\n                MediaRec.stop();\n                MS.getTracks().forEach( track => track.stop() );\n                console.log(\"Stopped Recording\");\n            \n            }, 10000);\n            \n\n    \n            // console.log(MediaRec.ondataavailable);\n        });\n\n\n\n        } catch (error) {\n        console.log(\"Error encounter while accessing a microphone device \" + error);\n        }\n    }\n\n    return (\n        <button className=\"outer_circle\" onClick={Recording}>\n            <FaMicrophone id=\"symbol\" />\n        </button>\n\n        // <div className=\"outer_circle\">\n        //     <FaMicrophone id=\"symbol\" />\n        // </div>\n    );\n}\n\nexport default RecordButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}